#+TITLE: org-bridge
#+AUTHOR: Aleks Ozolins
#+DATE: [2025-06-28]

A self-hosted API server for Emacs org-mode files with an optional Zapier integration. Bridge your org-mode workflow with 8000+ apps via Zapier, or use the REST API directly for custom integrations and automation.

* Architecture

#+BEGIN_EXAMPLE
[Zapier] ↔ [Python API Server] ↔ [Org Files] ↔ [Dropbox/Sync] ↔ [Emacs]
#+END_EXAMPLE

* Project Structure

#+BEGIN_EXAMPLE
org-bridge/
├── server/           # Python FastAPI server
│   ├── main.py      # API server entry point
│   ├── org_parser.py # Org-mode file parsing
│   ├── requirements.txt
│   ├── .env.example # Environment configuration template
│   └── org-bridge.service.example # systemd service template
├── zapier-app/       # Zapier integration
│   ├── index.js     # Zapier app definition
│   ├── creates/     # Zapier action definitions
│   │   └── create_todo.js
│   ├── package.json
│   └── test/
├── venv/            # Python virtual environment (auto-created)
├── .tool-versions   # asdf version management
├── .envrc           # direnv configuration
└── README.org       # This file
#+END_EXAMPLE

* Getting Started

** Prerequisites

- =asdf= - for managing tool versions
- =direnv= - for automatic environment management

#+BEGIN_SRC bash
# Install project tool versions
asdf install

# Allow direnv to manage this directory
direnv allow
#+END_SRC

This will automatically create and activate a Python virtual environment when you enter the directory.

** Choose Your Setup

*** Option 1: Development/Testing (Manual Run)

For development, testing, or temporary use:

#+BEGIN_SRC bash
# 1. Configure environment
cp server/.env.example server/.env
# Edit server/.env to set your ORG_FILES_DIR

# 2. Install dependencies  
pip install -r server/requirements.txt

# 3. Run the server
python server/main.py
#+END_SRC

The server runs on http://localhost:8247 using your =.env= configuration.

*** Option 2: Production (Systemd Service)

For permanent deployment as a background service:

#+BEGIN_SRC bash
# 1. Copy and customize the service file
cp server/org-bridge.service.example server/org-bridge.service
# Edit server/org-bridge.service to update paths and environment variables

# 2. Install and start the service
sudo cp server/org-bridge.service /etc/systemd/system/
sudo systemctl daemon-reload
sudo systemctl enable org-bridge.service
sudo systemctl start org-bridge.service
#+END_SRC

** API Documentation

Once running, visit http://localhost:8247/docs for interactive API documentation.

* Service Management

Commands for managing the systemd service:

#+BEGIN_SRC bash
# Check service status
sudo systemctl status org-bridge.service

# View logs (follow mode)
sudo journalctl -u org-bridge.service -f

# Restart service
sudo systemctl restart org-bridge.service

# Stop service
sudo systemctl stop org-bridge.service
#+END_SRC

The service will:
- Auto-start on boot
- Auto-restart on failure  
- Run as your user (not root)
- Log to systemd journal

* Features (Current)

- ✅ *TODO Creation*: Create org-mode TODOs with states, priorities, tags, scheduling
- ✅ *Zapier Integration*: Pre-built Zapier action for creating TODOs
- ✅ *File Organization*: Optional heading-based filing within org files
- ✅ *Recurring TODOs*: Support for org-mode repeat syntax
- ✅ *REST API*: Direct API access for custom integrations

* Features (Planned)

- *TODO Reading*: GET endpoints to read and filter existing TODOs
- *TODO Updates*: Update existing TODO states, priorities, etc.
- *Agenda Integration*: Sync org agenda with calendars  
- *Denote-style Notes*: Create timestamped notes with proper naming
- *Real-time Sync*: File watching with webhook triggers

* Resources

- [[https://github.com/zapier/zapier-platform/blob/main/packages/cli/README.md][Zapier Platform Documentation]]
- [[https://orgmode.org/][Org-mode Official Site]]
- [[https://protesilaos.com/emacs/denote][Denote Package by Prot]]

* TODOS

** Development Environment
- [ ] =use asdf= or something like that in =.envrc= needs to actually work
- [ ] Placeholder data only in example systemd unit or env files
- [ ] Option for deployment on a mac (without systemd?)
- [ ] Containerize server for easy deployment?

** Enhanced Zapier Integration
- [ ] Test error handling and possibly add =inputFormat= for validation
- [X] Add heading-based filing: option to insert TODOs under specific org headings instead of EOF
  - Add `heading` parameter to `CreateTodoRequest` model
  - TODO level = heading level + 1 (if heading is `*`, TODO becomes `**`)
  - Insert before next same-level heading (not immediately after target heading)
    - Preserves chronological order of existing TODOs
    - Feels natural like appending to end of section
    - Handles sub-headings gracefully
  - Edge cases: last section (insert at EOF), empty section, heading not found
  - If heading doesn't exist: create heading at EOF, then add TODO under it
  - Modify `append_todo_to_file()` to use insertion logic instead of simple append
- [ ] (Much later) Dynamic file metadata: read TODO states and tags from target file to populate Zapier field choices
- [X] Better help text in Zapier app
- [X] ID generation for any created headings
- [X] Replace string date fields with =datetime= field types for better UX
- [X] Add time-of-day support for scheduling (=SCHEDULED: <2025-01-20 Mon 14:30>=)  
- [X] Implement recurring TODO support with conditional fields (checkbox → interval + unit)
- [X] Support org-mode repeat syntax (=+1w=, =+2d=, =+1m=, etc.)
- [X] Support different repeat types: standard (=+=), completion-based (=.+=), and cumulative (=++=)
- [X] Add proper datetime conversion from Zapier's ISO format to org-mode format
