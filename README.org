#+TITLE: org-bridge
#+AUTHOR: Aleks Ozolins
#+DATE: [2025-06-28]

A self-hosted API server for Emacs org-mode files with a public Zapier integration. Bridge your org-mode workflow with 8000+ apps via the "Org Bridge" Zapier app, or use the REST API directly for custom integrations and automation.

* Architecture

#+BEGIN_EXAMPLE
[Zapier] ↔ [Python API Server] ↔ [Org Files] ↔ [Dropbox/Sync] ↔ [Emacs]
#+END_EXAMPLE

* Project Structure

#+BEGIN_EXAMPLE
org-bridge/
├── server/           # Python FastAPI server
│   ├── main.py      # API server entry point
│   ├── org_parser.py # Org-mode file parsing
│   ├── requirements.txt
│   ├── .env.example # Environment configuration template
│   └── org-bridge.service.example # systemd service template
├── zapier-app/       # Zapier integration
│   ├── index.js     # Zapier app definition
│   ├── creates/     # Zapier action definitions
│   │   └── create_todo.js
│   ├── package.json
│   ├── .zapierapprc.example # Zapier credentials template
│   └── test/
├── venv/            # Python virtual environment (auto-created)
├── .tool-versions   # asdf version management
├── .envrc           # direnv configuration
├── LICENSE          # MIT license
└── README.org       # This file
#+END_EXAMPLE

* Getting Started

** Prerequisites

- =asdf= - for managing tool versions
- =direnv= - for automatic environment management

#+BEGIN_SRC bash
# Install project tool versions
asdf install

# Allow direnv to manage this directory
direnv allow
#+END_SRC

This will automatically create and activate a Python virtual environment when you enter the directory.

** Choose Your Setup

*** Option 1: Development/Testing (Manual Run)

For development, testing, or temporary use:

#+BEGIN_SRC bash
# 1. Configure environment
cp server/.env.example server/.env
# Edit server/.env to set your ORG_FILES_DIR

# 2. Install dependencies  
pip install -r server/requirements.txt

# 3. Run the server
python server/main.py
#+END_SRC

The server runs on http://localhost:8247 using your =.env= configuration.

*** Option 2: Production (Systemd Service)

For permanent deployment as a background service:

#+BEGIN_SRC bash
# 1. Copy and customize the service file
cp server/org-bridge.service.example server/org-bridge.service
# Edit server/org-bridge.service to update paths and environment variables

# 2. Install and start the service
sudo cp server/org-bridge.service /etc/systemd/system/
sudo systemctl daemon-reload
sudo systemctl enable org-bridge.service
sudo systemctl start org-bridge.service
#+END_SRC

** API Documentation

Once running, visit http://localhost:8247/docs for interactive API documentation.

* Using the Zapier Integration

** For End Users

The Zapier integration is available publicly on Zapier.com as **"Org Bridge"**. 

Once your server is running (Option 1 or 2 above), you can:

1. Go to [[https://zapier.com/apps][zapier.com]] and search for "Org Bridge"
2. Create a new Zap using Org Bridge as an action
3. Configure it with your server address (e.g., =yourdomain.com:8247= or =192.168.1.100:8247=)
4. Connect any trigger (Gmail, Slack, Trello, etc.) to create TODOs in your org files

The integration supports all TODO features: states, priorities, tags, scheduling, recurring tasks, and heading-based organization.

** For Developers (Forking the Zapier App)

If you want to customize the Zapier integration:

#+BEGIN_SRC bash
cd zapier-app
npm install

# You'll need your own Zapier developer account and app
# Copy the example config and add your credentials
cp .zapierapprc.example .zapierapprc
# Edit .zapierapprc with your actual Zapier app ID and key

# Test and deploy your custom version
zapier test
zapier push
#+END_SRC

The =.zapierapprc= file contains your Zapier app credentials and is gitignored for security.

* Service Management

Commands for managing the systemd service:

#+BEGIN_SRC bash
# Check service status
sudo systemctl status org-bridge.service

# View logs (follow mode)
sudo journalctl -u org-bridge.service -f

# Restart service
sudo systemctl restart org-bridge.service

# Stop service
sudo systemctl stop org-bridge.service
#+END_SRC

The service will:
- Auto-start on boot
- Auto-restart on failure  
- Run as your user (not root)
- Log to systemd journal

* Features (Current)

- ✅ *TODO Creation*: Create org-mode TODOs with states, priorities, tags, scheduling
- ✅ *Zapier Integration*: Pre-built Zapier action for creating TODOs
- ✅ *File Organization*: Optional heading-based filing within org files
- ✅ *Recurring TODOs*: Support for org-mode repeat syntax
- ✅ *REST API*: Direct API access for custom integrations

* Features (Planned)

- *TODO Reading*: GET endpoints to read and filter existing TODOs
- *TODO Updates*: Update existing TODO states, priorities, etc.
- *Agenda Integration*: Sync org agenda with calendars  
- *Denote-style Notes*: Create timestamped notes with proper naming
- *Real-time Sync*: File watching with webhook triggers

* Resources

- [[https://github.com/zapier/zapier-platform/blob/main/packages/cli/README.md][Zapier Platform Documentation]]
- [[https://orgmode.org/][Org-mode Official Site]]
- [[https://protesilaos.com/emacs/denote][Denote Package by Prot]]

* Development TODOs

** Critical for Public Release
- [ ] **Add API Key Authentication** - Required for Zapier public app approval
  - Add `API_KEY` environment variable requirement
  - Implement `X-API-Key` header validation in FastAPI endpoints
  - Update Zapier app authentication to collect API key
  - Update documentation with API key setup instructions
  - Security: Protect all data-modifying endpoints (`POST /todos`, etc.)

** Future Enhancements  
- [ ] GET endpoints for reading existing TODOs
- [ ] PUT endpoints for updating TODO states
- [ ] WebDAV or CalDAV integration for agenda sync
- [ ] Docker container for easier deployment
- [ ] macOS deployment option (alternatives to systemd)


