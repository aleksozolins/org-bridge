#+TITLE: org-bridge
#+AUTHOR: Aleks Ozolins
#+DATE: [2025-06-28]

A self-hosted API server for Emacs org-mode files with an optional Zapier integration. Bridge your org-mode workflow with 8000+ apps via Zapier, or use the REST API directly for custom integrations and automation.

* Architecture

#+BEGIN_EXAMPLE
[Zapier] â†” [Python API Server] â†” [Org Files] â†” [Dropbox/Sync] â†” [Emacs]
#+END_EXAMPLE

* Project Structure

#+BEGIN_EXAMPLE
org-bridge/
â”œâ”€â”€ server/           # Python FastAPI server
â”‚   â”œâ”€â”€ main.py      # API server entry point
â”‚   â”œâ”€â”€ org_parser.py # Org-mode file parsing
â”‚   â””â”€â”€ requirements.txt
â”œâ”€â”€ zapier-app/       # Zapier integration
â”‚   â”œâ”€â”€ index.js     # Zapier app definition
â”‚   â”œâ”€â”€ creates/     # Zapier action definitions
â”‚   â”‚   â””â”€â”€ create_todo.js
â”‚   â”œâ”€â”€ package.json
â”‚   â””â”€â”€ test/
â”œâ”€â”€ org-bridge.service # systemd service file for production
â”œâ”€â”€ venv/            # Python virtual environment (auto-created)
â”œâ”€â”€ .tool-versions   # asdf version management
â”œâ”€â”€ .envrc           # direnv configuration
â””â”€â”€ README.org       # This file
#+END_EXAMPLE

* Getting Started

** Prerequisites

- =asdf= - for managing tool versions
- =direnv= - for automatic environment management

#+BEGIN_SRC bash
# Install project tool versions
asdf install
#+END_SRC

** Environment Setup

The project uses =direnv= for automatic environment management:

#+BEGIN_SRC bash
# Allow direnv to manage this directory
direnv allow

# This will automatically:
# - Create a Python virtual environment (venv/)
# - Activate it when you enter the directory
# - Load environment variables from server/.env
#+END_SRC

** Server Setup (Python)

#+BEGIN_SRC bash
# The virtual environment is already activated by direnv
pip install -r server/requirements.txt

# Run the server (from project root)
python server/main.py
#+END_SRC

* Features (Planned)

- *TODO Management*: Create, update, and sync org-mode TODOs
- *Agenda Integration*: Sync org agenda with calendars  
- *Denote-style Notes*: Create timestamped notes with proper naming
- *Real-time Sync*: File watching with webhook triggers
- *Multi-directional*: Zapier â†’ Org and Org â†’ Zapier workflows

* ðŸ”§ Development

This project combines Python (server) and JavaScript (Zapier integration) to bridge the gap between org-mode and modern workflow tools.

** Environment Setup

The server uses environment variables for configuration. You can either:
- Set them in your shell
- Create =server/.env= file (loaded automatically by direnv)

Key variables:
- =ORG_FILES_DIR= - Path to your org files directory (default: =~/docs/org=)
- =INBOX_FILENAME= - Inbox file name (default: =inbox.txt=)
- =SERVER_PORT= - Server port (default: =8247=)

** Virtual Environment

The Python virtual environment is managed automatically by =direnv=:
- Created in =venv/= directory
- Activated automatically when entering project directory
- Deactivated when leaving project directory

** API Documentation

Once the server is running, visit http://localhost:8247/docs for interactive API documentation.

* Production Deployment

To run the server as a background service using systemd:

** Setup systemd service

#+BEGIN_SRC bash
# Copy the service file
sudo cp org-bridge.service /etc/systemd/system/

# Reload systemd and enable the service
sudo systemctl daemon-reload
sudo systemctl enable org-bridge.service

# Start the service
sudo systemctl start org-bridge.service
#+END_SRC

** Service management

#+BEGIN_SRC bash
# Check service status
sudo systemctl status org-bridge.service

# View logs (follow mode)
sudo journalctl -u org-bridge.service -f

# Restart service
sudo systemctl restart org-bridge.service

# Stop service
sudo systemctl stop org-bridge.service
#+END_SRC

The service will:
- Auto-start on boot
- Auto-restart on failure
- Run as your user (not root)
- Log to systemd journal
- Use your existing virtual environment

* Resources

- [[https://github.com/zapier/zapier-platform/blob/main/packages/cli/README.md][Zapier Platform Documentation]]
- [[https://orgmode.org/][Org-mode Official Site]]
- [[https://protesilaos.com/emacs/denote][Denote Package by Prot]]

* TODOS

** Development Environment
- [ ] =use asdf= or something like that in =.envrc= needs to actually work

** Enhanced Zapier Integration
- [ ] Better help text in Zapier app
- [ ] Add heading-based filing: option to insert TODOs under specific org headings instead of EOF
- [ ] (Much later) Dynamic file metadata: read TODO states and tags from target file to populate Zapier field choices
- [X] ID generation for any created headings
- [X] Replace string date fields with =datetime= field types for better UX
- [X] Add time-of-day support for scheduling (=SCHEDULED: <2025-01-20 Mon 14:30>=)  
- [X] Implement recurring TODO support with conditional fields (checkbox â†’ interval + unit)
- [X] Support org-mode repeat syntax (=+1w=, =+2d=, =+1m=, etc.)
- [X] Support different repeat types: standard (=+=), completion-based (=.+=), and cumulative (=++=)
- [X] Add proper datetime conversion from Zapier's ISO format to org-mode format